#Create parent genome file names text file; for while loops

ls ~/Genome | grep 'fa$' > ~/Genomes.txt

#Create target transcript file names text file; for while loops 

ls ~/Target | grep 'T00[[:digit:]].fa$' > ~/Targets.txt

#Index parent genomes

for i in `ls ~/Genome | grep '.fa$'`; do
samtools faidx ~/Genome/$i
done

#Create GFFs

while read Genomes; do 
genomeFasta=`echo $Genomes | awk '{print $1}'`
outputGenomeName=`echo $Genomes | awk '{print $2}'`
while read Targets; do 
targetName=`basename -s .fa $Targets`
output=${outputGenomeName}.${targetName}.gff3
gth -genomic ~/Genome/${genomeFasta} -cdna ~/Target/${Targets} -gff3out -o ~/GFFs/${output} \
-startcodon -finalstopcodon -cdnaforward -skipalignmentout -v -exact -species maize -force & 
done <~/Targets.txt 
wait
done <~/Genomes.txt

#Create Exon fastas

while read Genomes; do
genomeName=`echo $Genomes | awk '{print $2}'`
genomeFile=`echo $Genomes | awk '{print $1}'`
for i in `ls ~/GFFs | grep "$genomeName"`; do
gene=`basename -s .gff3 $i`
gff=${gene}.gff3
output=${gene}.fa
gffread -w ~/exonSequence/${output} -g ~/Genome/${genomeFile} ~/GFFs/${gff} &
done
wait
done <~/Genomes.txt

#Extract CDS fasta sequences

while read Genomes; do
genomeName=`echo $Genomes | awk '{print $2}'`
genomeFile=`echo $Genomes | awk '{print $1}'`
for i in `ls ~/GFFs | grep "$genomeName"`; do
gene=`basename -s .gff3 $i`
gff=${gene}.gff3
output=${gene}_CDS.fa
gffread -C -x ~/CDSsequence/${output} -g ~/Genome/${genomeFile} ~/GFFs/${gff} &
done
wait
done <~/Genomes.txt

#Translate CDS to proteins

while read Genomes; do
genomeName=`echo $Genomes | awk '{print $2}'`
genomeFile=`echo $Genomes | awk '{print $1}'`
for i in `ls ~/CDSsequence | grep "$genomeName"`; do
sample=`basename -s .fa $i`
seqkit translate CDSsequence/$i > ~/translatedProtein/${sample}_protein.fa &
done
wait
done <~/Genomes.txt

#BLAST parameters 

sseqid slen sstart send sseq evalue bitscore score length pident qcovus

#Nucleotide BLAST loop and reversed query/subject BLAST loop

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/exonSequence/ | grep $targetName`; do
gene=`basename -s .fa $i`
blastn -subject ~/exonSequence/$i\
 -query ~/Target/$targetName -outfmt "6 slen qlen sstart qstart send qend length pident\
  qcovus" > ~/BLASTResults/${gene}.blastn.txt &
done
wait
done <~/Targets.txt

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/exonSequence/ | grep $targetName`; do
gene=`basename -s .fa $i`
blastn -subject ~/Target/$targetName\
 -query ~/exonSequence/$i -outfmt "6 \
 qcovus" > ~/BLASTResults/${gene}.blastn.reverse.txt &
done
wait
done <~/Targets.txt


#Same command but for protein BLAST

while read Targets; do
targetName=`echo $Targets | cut -d '_' -f 1`
for i in `ls ~/translatedProtein/ | grep $targetName`; do
protein=`basename -s .fa $i`
blastp -subject ~/translatedProtein/$i \
-query ~/Target/$Targets -outfmt "6 slen qlen sstart qstart send qend length pident qcovs" \
> ~/BLASTProteinResults/${protein}.blastp.txt &
done
wait
done <~/proteinTargets.txt

while read Targets; do
targetName=`echo $Targets | cut -d '_' -f 1`
for i in `ls ~/translatedProtein/ | grep $targetName`; do
protein=`basename -s .fa $i`
blastp -subject ~/Target/$Targets \
-query ~/translatedProtein/$i -outfmt "6 \
qcovs" > ~/BLASTProteinResults/${protein}.blastp.reverse.txt &
done
wait
done <~/proteinTargets.txt

#Concatenate BLAST.txt and BLAST.reverse.txt to make tables to read into R scripts

for i in `ls ~/BLASTProteinResults | grep blastp.txt$`; do
sample=`basename -s .txt $i`
paste ~/BLASTProteinResults/${sample}.txt ~/BLASTProteinResults/${sample}.reverse.txt > \
~/BLASTProteinResults/${sample}.combined.txt
done

for i in `ls ~/BLASTResults | grep blastn.txt$`; do
sample=`basename -s .txt $i`
paste ~/BLASTResults/${sample}.txt ~/BLASTResults/${sample}.reverse.txt > \
~/BLASTResults/${sample}.combined.txt
done

# Create multifastas for exon and protein multiple sequence alignments

while read Targets; do
targetName=`basename -s .fa $Targets`
for i in `ls ~/translatedProtein | grep $targetName`; do
header=`echo $i | cut -d '.' -f 1`
cp ~/translatedProtein/$i ~/translatedProtein/tmp.fa
sed -i "1s/.*/>$header/" ~/translatedProtein/tmp.fa
cat ~/translatedProtein/tmp.fa >> ~/multifastasMSA/${targetName}_CDS_protein.fa
done
done <Targets.txt
rm ~/translatedProtein/tmp.fa

while read Targets; do
targetName=`basename -s .fa $Targets`
for i in `ls ~/exonSequence | grep $targetName`; do
header=`echo $i | cut -d '.' -f 1`
cp ~/exonSequence/$i ~/exonSequence/tmp.fa
sed -i "1s/.*/>$header/" ~/exonSequence/tmp.fa
cat ~/exonSequence/tmp.fa >> ~/multifastasMSA/${targetName}.fa
done
done <Targets.txt
rm ~/translatedProtein/tmp.fa


#Generate MSAs

for i in `ls ~/multifastasMSA/`; do
name=`basename -s .fa $i`
clustalo -i multifastasMSA/$i -v \
-o ~/multipleSequenceAlignments/${name}.a2m \
--clustering-out=~/multipleSequenceAlignments/${name}.cluster --force
done
 
#BLAST to outputs from B73 (control genome for workflow)
 
while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/exonSequence/ | grep $targetName`; do
gene=`basename -s .fa $i`
blastn -subject ~/exonSequence/B73.$targetName \
-query ~/exonSequence/$i -outfmt "6 \
qcovus" > ~/nucleotideBLASTB73/${gene}.blastn.reverse.txt &
done
wait
done <~/Targets.txt

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/exonSequence/ | grep $targetName`; do
gene=`basename -s .fa $i`
blastn -subject ~/exonSequence/$i \
-query ~/exonSequence/B73.$targetName -outfmt "6 \
slen qlen sstart qstart send qend length pident qcovus" > ~/nucleotideBLASTB73/${gene}.blastn.txt &
done
wait
done <~/Targets.txt

for i in `ls | grep blastn.txt$`; do
sample=`basename -s .txt $i`
paste ${sample}.txt ${sample}.reverse.txt > ${sample}.combined.txt
done

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/CDSsequence/ | grep $targetName`; do
gene=`basename -s .fa $i`
blastn -subject ~/CDSsequence/B73.$targetName \
-query ~/CDSsequence/$i -outfmt "6 \
qcovus" > ~/CDSBLASTB73/${gene}.blastn.reverse.txt &
done
wait
done <~/CDSSequenceTargets.txt

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/CDSsequence/ | grep $targetName`; do
gene=`basename -s .fa $i`
blastn -subject ~/CDSsequence/$i \
-query ~/CDSsequence/B73.$targetName -outfmt "6 \
slen qlen sstart qstart send qend length pident qcovus" > ~/CDSBLASTB73/${gene}.blastn.txt &
done
wait
done <~/CDSSequenceTargets.txt

for i in `ls | grep blastn.txt$`; do
sample=`basename -s .txt $i`
paste ${sample}.txt ${sample}.reverse.txt > ${sample}.combined.txt
done

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/translatedProtein/ | grep $targetName`; do
protein=`basename -s .fa $i`
blastp -subject ~/translatedProtein/B73.$targetName -query ~/translatedProtein/$i -outfmt "6 \
qcovs" > ~/proteinBLASTB73/${protein}.blastp.reverse.txt &
done
wait
done <~/CDSTargets.txt

while read Targets; do
targetName=`echo $Targets`
for i in `ls ~/translatedProtein/ | grep $targetName`; do
protein=`basename -s .fa $i`
blastp -subject ~/translatedProtein/$i -query ~/translatedProtein/B73.$targetName -outfmt "6 \
slen qlen sstart qstart send qend length pident qcovs" > ~/proteinBLASTB73/${protein}.blastp.txt &
done
wait
done <~/CDSTargets.txt

for i in `ls | grep blastp.txt$`; do
sample=`basename -s .txt $i`
paste ${sample}.txt ${sample}.reverse.txt > ${sample}.combined.txt
done

#Display MSAs in terminal

for i in `ls ~/multipleSequenceAlignments | grep protein`; do echo ~/multipleSequenceAlignments/$i; 
alv --only-variable ~/multipleSequenceAlignments/$i; done

#Extract Scaffold fastas for BLAT and AUGUSTUS

for i in `ls targetGFFs`; do
while read GFF; do
sample=`basename -s .gff3 $GFF`
cat GFFs/${GFF}| grep -v '#' | \
awk '$3 == "gene"' | awk '{print $1}' > targetScaffolds/${sample}_scaffold.txt
done < ~/targetGFFs/$i
done

for i in `ls targetScaffolds`; do
fileName=`basename -s .txt $i`
parent=`echo $i | cut -f 1 -d '.'`
genome=`ls Genome | grep $parent | grep .fa$`
seqtk subseq Genome/$genome targetScaffolds/$i > targetScaffoldFastas/${fileName}.fa
done

#BLAT and Augustus

for i in `ls cDNA`; do
geneModel=`basename -s _cDNAs.fa $i`
for j in `ls targetScaffoldFastas | grep $geneModel`; do
parent=`echo $j | cut -f 1 -d '.'`
blat targetScaffoldFastas/$j cDNA/$i BLAToutput/${parent}.${geneModel}.psl &
done
wait
done

for i in `ls BLAToutput`; do
fileName=`basename -s .psl $i`
blat2hints.pl --in=BLAToutput/${i} --out=hintGFFs/${fileName}.hints.E.gff
done

for i in `ls hintGFFs | grep -v B73`; do
fileName=`basename -s .hints.E.gff $i`
fasta=`ls targetScaffoldFastas | grep $fileName`
augustus --species=maize --hintsfile=~/hintGFFs/$i \
--extrinsicCfgFile=~/anaconda3/envs/Augustus/config/extrinsic/extrinsic.ME.cfg \
targetScaffoldFastas/$fasta --gff3=on --softmasking=0 --protein=on \
--codingseq=on --stop=on --start=on > AugustusOutput/$fileName.augustus.gff3 &
done

#Produce CDS and protein sequences from Augustus annotations

for i in `ls AugustusOutput | grep gff3$`; do
fileName=`basename -s .augustus.gff3 $i`
seqFile=`ls targetScaffoldFastas | grep $fileName | grep fa$`
getAnnoFasta.pl AugustusOutput/$i --seqfile=targetScaffoldFastas/$seqFile --protein=on --codingseq=on
done

#Create multifastas for Augustus protein predictions, GenomeThreader protein predictions, and controls from MaizeGDB

while read gene; do
protein=`ls Target | grep ${gene}_P | grep fa$`
for i in `ls AugustusOutput | grep .aa$ | grep $gene`; do
parentModel=`basename -s .augustus3.aa $i`
for j in `ls translatedProtein | grep $parentModel`; do
cat Target/$protein > AugustusMSA/$parentModel.fa
cat translatedProtein/$j >> AugustusMSA/$parentModel.fa
cat AugustusOutput/$i >> AugustusMSA/$parentModel.fa
done
done
done < AugustusCompare.txt

#MSA for Augustus protein predictions, GenomeThreader protein predictions, and controls from MaizeGDB

for i in `ls ~/AugustusMSA/ | grep fa$`; do
name=`basename -s .fa $i`
clustalo -i ~/AugustusMSA/$i -v \
-o ~/AugustusMSA/${name}.a2m \
--force 
done

#Visualize MSA in terminal

for i in `ls AugustusMSA/ | grep .a2m`; do 
echo $i
alv AugustusMSA/$i; done

samtools faidx genome.fa
gt gff3 -sortlines -tidy -retainids myfile.gff > myfile.sorted.gff
bgzip myfile.sorted.gff
tabix myfile.sorted.gff.gz

#Augustus with prediction start/end locations and strandedness extracted from GenomeThreader GFFs and alternative transcripts from evidence

for i in `ls hintGFFs | grep -v B73`; do
fileName=`basename -s .hints.E.gff $i`
fasta=`ls targetScaffoldFastas | grep $fileName | grep .fa$`
for j in `ls GFFs | grep ${fileName}`; do
start=`cat GFFs/$j | grep -v '#' | \
awk '$3 == "gene"' | awk '{print $4-500}'`
end=`cat GFFs/$j| grep -v '#' | \
awk '$3 == "gene"' | awk '{print $5+500}'`
strand=`cat GFFs/$j | grep -v '#' | awk '$3 == "gene"' | awk '{print $7}'`
if [[ ${strand} == '+' ]]
then 
	orientation="forward"
else 
	orientation="backward"
fi
augustus --species=maize --hintsfile=~/hintGFFs/$i \
--extrinsicCfgFile=~/anaconda3/envs/Augustus/config/extrinsic/extrinsic.ME.cfg \
targetScaffoldFastas/$fasta --gff3=on --softmasking=0 --protein=on \
--codingseq=on --stop=on --start=on --predictionStart=$start --predictionEnd=$end --strand=$orientation \
--alternatives-from-evidence=true \
> AugustusOutput/$fileName.augustus.gff3 &
done
done

#IGV preparation (only for gene model Zm00001d022554)

for i in `ls targetScaffoldFastas | grep fa$`; do
samtools faidx targetScaffoldFastas/$i
done

for i in `ls targetScaffoldFastas | grep 22554`; do
cp targetScaffoldFastas/$i igvFiles
done

for i in `ls GFFs | grep 'Zm00001d022554'`; do
fileName=`basename -s .gff3 $i`
gt gff3 -sortlines -tidy -retainids GFFs/$i > \
igvFiles/$fileName.sorted.gff3
done

for i in `ls AugustusOutput | grep 'Zm00001d022554' | grep gff3$`; do
fileName=`basename -s .gff3 $i`
gt gff3 -sortlines -tidy -retainids AugustusOutput/$i > \
igvFiles/$fileName.sorted.gff3
done

for i in `ls igvFiles | grep gff3$`; do
bgzip igvFiles/$i
tabix igvFiles/$i.gz
done

###scp igvFiles/ to local machine for igv visualization
